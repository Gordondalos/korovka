$(document).ready(function(){$("#sticker").sticky({topSpacing:20}),$(".toogle-img-partners").click(function(){var t=$(this).attr("id");$("#"+t).toggleClass("rotate"),$("."+t).slideToggle("fast",function(){$("."+t).attr("display","none")})}),$("#buttonsearch").click(function(){$("#formsearch").slideToggle("fast",function(){}),$("#searchbox").focus(),$(".openclosesearch").toggle()}),$("#buttonsearch1").click(function(){$("#formsearch1").slideToggle("fast",function(){}),$(".openclosesearch1").toggle(),$("#searchbox1").focus()}),$("#buttonsearch3").click(function(){$("#formsearch3").slideToggle("fast",function(){$("#content").toggleClass("moremargin")}),$(".openclosesearch3").toggle(),$("#searchbox3").focus()}),$(document).ready(function(){$(".clicks").hover(function(){var t=$(this).attr("id");return $("."+t).slideToggle("normal"),!1})}),$(".scroll_to").click(function(t){t.preventDefault();var e=$(this).attr("href");console.log(e);var o=$("."+e).offset().top-70;return console.log(o),$("body,html").animate({scrollTop:o},2e3),!1});var t=$(window).width();480>t&&($("p.item1").css("display","block !important"),$("p.item2").css("display","block !important"),$(".text_item > p").removeClass(),$(".down_item  p").remove()),$(".count_element").on("click",function(){return ga("send","event","goal","goal"),yaCounterXXXXXXXX.reachGoal("goal"),!0}),Modernizr.svg||$("img[src*='svg']").attr("src",function(){return $(this).attr("src").replace(".svg",".png")}),$("#form").submit(function(){return $.ajax({type:"POST",url:"mail.php",data:$(this).serialize()}).done(function(){alert("Спасибо за заявку!"),setTimeout(function(){$("#form").trigger("reset")},1e3)}),!1});try{$.browserSelector(),$("html").hasClass("chrome")&&$.smoothScroll()}catch(e){}$("img, a").on("dragstart",function(t){t.preventDefault()})}),$(window).load(function(){$(".loader_inner").fadeOut(),$(".loader").delay(400).fadeOut("slow")});
//# sourceMappingURL=data:application/json;base64,
