$(document).ready(function(){function t(){$("#search_form input").is(":focus")||$("#search_form").css("opacity","0")}function o(){$("#search_form2 input").is(":focus")||$("#search_form2").css("opacity","0")}$(function(){$(".curtains").curtain({scrollSpeed:300,controls:".menu",curtainLinks:".curtain-links",nextSlide:function(){console.log("ok")}})}),$(document).ready(function(){$(".clicks").hover(function(){var t=$(this).attr("id");return $("."+t).slideToggle("normal"),!1})}),$(".scroll_to").click(function(t){t.preventDefault();var o=$(this).attr("href");console.log(o);var e=$("."+o).offset().top-70;return console.log(e),$("body,html").animate({scrollTop:e},2e3),!1});var e=$(window).width();480>e&&($("p.item1").css("display","block !important"),$("p.item2").css("display","block !important"),$(".text_item > p").removeClass(),$(".down_item  p").remove()),$("li.search2").hover(function(){$("#search_form").toggle(function(){$("#search_form").css("opacity","1"),setTimeout(t,5e3)})}),$("li.search2").hover(function(){$("#search_form2").toggle(function(){$("#search_form2").css("opacity","1"),setTimeout(o,5e3)})}),$(".count_element").on("click",function(){return ga("send","event","goal","goal"),yaCounterXXXXXXXX.reachGoal("goal"),!0}),Modernizr.svg||$("img[src*='svg']").attr("src",function(){return $(this).attr("src").replace(".svg",".png")}),$("#form").submit(function(){return $.ajax({type:"POST",url:"mail.php",data:$(this).serialize()}).done(function(){alert("Спасибо за заявку!"),setTimeout(function(){$("#form").trigger("reset")},1e3)}),!1});try{$.browserSelector(),$("html").hasClass("chrome")&&$.smoothScroll()}catch(r){}$("img, a").on("dragstart",function(t){t.preventDefault()})}),$(window).load(function(){$(".loader_inner").fadeOut(),$(".loader").delay(400).fadeOut("slow")});
//# sourceMappingURL=data:application/json;base64,
